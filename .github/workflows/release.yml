name: Build Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    name: Build for macOS
    runs-on: macos-11.0
    env:
      TARGET: x86_64-apple-darwin
      ARM: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install Rust beta
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          default: true
          target: ${{ env.ARM }} # This is in addition to the native target
          profile: minimal
      - name: Build for x86_64-apple-darwin
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Build for aarch64-apple-darwin
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ env.ARM }}
      - name: Package binaries
        id: package_binaries
        run: .ci/package.sh
      - name: Publish release with binaries
        id: publish_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: badlogvis ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          files: |
            ./out/badlogvis-*.tar.gz
  build-linux:
    name: Build for Linux and Windows
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
      WIN: x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2
      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install Rust beta
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          default: true
          target: ${{ env.WIN }} # This is in addition to the native target
          profile: minimal
      - name: Build for x86_64-unknown-linux-gnu
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Build for x86_64-pc-windows-gnu
        id: build_windows
        run: .ci/cross-build.sh
      - name: Package binaries
        id: package_binaries
        run: .ci/package.sh
      - name: Publish release with binaries
        id: publish_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: badlogvis ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          files: |
            ./target/release/badlogvis-${{ env.WIN }}.exe
            ./out/badlogvis-*.tar.gz



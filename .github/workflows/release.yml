name: Build Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    name: Build for macOS
    runs-on: macos-11.0
    env:
      TARGET: x86_64-apple-darwin
      ARM: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust beta
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          default: true
          target: ${{ env.ARM }} # This is in addition to the native target
          profile: minimal
      - name: Build for x86_64-apple-darwin
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Build for aarch64-apple-darwin
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ env.ARM }}
      - name: Rename binaries
        id: rename_binaries
        run: |
          mv target/release/badlogvis target/release/badlogvis-${{ env.TARGET }}
          mv target/${{ env.ARM }}/release/badlogvis target/release/badlogvis-${{ env.ARM }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload x86_64 binary
        id: upload_x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/release/badlogvis-${{ env.TARGET }}
          asset_name: badlogvis-${{ env.TARGET }}
          asset_content_type: application/octet-stream
      - name: Upload aarch64 binary
        id: upload_aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/release/badlogvis-${{ env.ARM }}
          asset_name: badlogvis-${{ env.ARM }}
          asset_content_type: application/octet-stream

